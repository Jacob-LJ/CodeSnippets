<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>jaTextView_VerticalCenterContent_wihtPlaceHolder</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>
- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    self.textView.textColor = RGBA(153, 153, 153, 1);
    [self handleTextViewContentOffset];
}

#pragma mark - UITextViewDelegate
- (void)textViewDidBeginEditing:(UITextView *)textView {
    
    if ([self.textView.text isEqualToString:kTextViewPlaceHolderText]) {
        self.textView.text = @"";
    }
    self.textView.textColor = RGBA(47, 47, 47, 1);
    [self handleTextViewContentOffset];
}


static const NSInteger kMaxWordNumber = 12;
- (void)textViewDidChange:(UITextView *)textView {
    
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        NSString *toBeString = textView.text;
        UITextRange *selectedRange = [textView markedTextRange];
        UITextPosition *position = [textView positionFromPosition:selectedRange.start offset:0];
        
        if (!position) { // 没有高亮选择的字，则对已输入的文字进行字数统计和限制
            if (toBeString.length &gt; kMaxWordNumber) {
                NSRange rangeIndex = [toBeString rangeOfComposedCharacterSequenceAtIndex:kMaxWordNumber];
                [SVProgressHUD showInfoWithStatus:[NSString stringWithFormat:@"字数不能超过%ld", kMaxWordNumber]];
                if (rangeIndex.length == 1) {
                    textView.text = [toBeString substringToIndex:kMaxWordNumber];
                } else {
                    NSRange rangeRange = [toBeString rangeOfComposedCharacterSequencesForRange:NSMakeRange(0, kMaxWordNumber)];
                    textView.text = [toBeString substringWithRange:rangeRange];
                    
                }
                [self handleTextViewContentOffset];
            }
        }
        
        [self handleTextViewContentOffset];
    });
}

- (void)handleTextViewContentOffset {
    
    CGFloat textViewH = self.textView.bounds.size.height;
    CGFloat topInsert = 0;
    CGRect cursorRect = [self.textView caretRectForPosition:self.textView.selectedTextRange.end];
    CGFloat fixValue = -4;
    topInsert = (textViewH - CGRectGetMaxY(cursorRect)) / 2.0 + fixValue;
    NSLog(@"%f",topInsert);
    self.textView.contentOffset = CGPointMake(0, -topInsert);
    
}

- (void)textViewDidEndEditing:(UITextView *)textView {
    if (!self.textView.text.length) {
        self.textView.text = kTextViewPlaceHolderText;
        self.textView.textColor = RGBA(153, 153, 153, 1);
        [self handleTextViewContentOffset];
    }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>5FEA5C68-A6C0-4A58-B7B1-37006495DEF7</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>垂直居中textView输入的内容,带placehoder,字数限制</string>
	<key>IDECodeSnippetTitle</key>
	<string>jaTextView_VerticalCenterContent_wihtPlaceHolder</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
