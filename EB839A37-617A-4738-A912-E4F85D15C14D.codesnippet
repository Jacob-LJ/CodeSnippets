<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>jaTableViewController_zoomOutHeader</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//
//  WPSpecialTopicDetailController.m
//  hunlimao
//
//  Created by Jacob on 2017/2/15.
//  Copyright © 2017年 taoximao. All rights reserved.
//

#import "WPSpecialTopicDetailController.h"

//view
#import "WPSpecialTopicListContentCell.h"
#import "HLMFooterMenuView.h"
//util
#import "HLMConstant.h"
//category
#import "UIView+Frame.h"
//lib
#import &lt;SVProgressHUD.h&gt;
#import "MJRefresh.h"
#import "UIImageView+WebCache.h"
//lib nav Behavior Action
#import "KZMutipleProxyBehavior.h"
#import "KZParallaxHeaderBehavior.h"
#import "KZNavBarGradientBehavior.h"

#define kBackgroundImageVH (HLMScreenW * 210.0 / 375.0)

@interface WPSpecialTopicDetailController ()&lt;UITableViewDelegate, UITableViewDataSource&gt;

@property (nonatomic, weak) UITableView *tableView;
@property (nonatomic, strong) NSMutableArray *noticesArray;
@property (nonatomic, assign) NSInteger page;

//nav 和 headerView
@property (nonatomic, weak) UIImageView *backgroundImageView;
@property (nonatomic, strong) KZParallaxHeaderBehavior *headerBehavior;
@property (nonatomic, strong) KZMutipleProxyBehavior *behavior;
@property (nonatomic, strong) KZNavBarGradientBehavior *NavBarBehavior;
@property (nonatomic, strong) CAGradientLayer *coverLayer;
@property (nonatomic, strong) UIColor *normalTintColor;
@property (nonatomic, strong) UIColor *selectedTintColor;

//bottom
@property (nonatomic, strong) UIView *footerBar; //底部条

@end

@implementation WPSpecialTopicDetailController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    
    [self setUpInit];
    [self setUpBackgroundImg];
    [self setUpTableView];
    [self setUpBehaviorAction];
    
    //导航栏底部黑色半透明渐变层
    [self setNavigationBarBlackHud];

}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    
    [self.NavBarBehavior initializeOrRecover];
    if (self.tableView.contentOffset.y == 0) {
        self.navigationItem.leftBarButtonItem.tintColor = [UIColor whiteColor];
    }
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    self.coverLayer.opacity = 1;
}

- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    self.coverLayer.opacity = 0;
}

- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
    [self.NavBarBehavior reset];
}

#pragma mark - SetUp
- (void)setUpInit {
    
    self.view.backgroundColor = themeBackgroundColor;
}

#pragma mark 设置背景大图
- (void)setUpBackgroundImg {
    UIImageView *bgImageV = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, HLMScreenW, kBackgroundImageVH)];
    //    [bgImageV sd_setImageWithURL:[NSURL URLWithString:@"http://pub.xitaoinfo.com/mall_44e72439da7d4a359fb90bdac928c4d1.jpg"] placeholderImage:[UIImage imageNamed:@"loading_image"]];
    bgImageV.image = [UIImage imageNamed:@"cooperation_bgp"];
    bgImageV.contentMode = UIViewContentModeScaleAspectFill;
    [self.view addSubview:bgImageV];
    self.backgroundImageView = bgImageV;
}


- (void)setUpTableView {
    
    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, HLMScreenW, HLMScreenH) style:UITableViewStyleGrouped];
    tableView.backgroundColor = [UIColor clearColor];
    [self.view addSubview:tableView];
    _tableView = tableView;
    tableView.delegate = self;
    tableView.dataSource = self;
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    tableView.mj_footer = [HLMRefreshAutoFooter footerWithRefreshingTarget:self refreshingAction:@selector(requsetMoreNotices)];
    
    [tableView registerNib:[UINib nibWithNibName:NSStringFromClass([WPSpecialTopicListContentCell class]) bundle:nil] forCellReuseIdentifier:WPSpecialTopicListContentCellID];
    
    UIView *tableViewHeadV = [[UIView alloc] initWithFrame:self.backgroundImageView.frame];
    tableViewHeadV.backgroundColor = [UIColor clearColor];
    
    self.tableView.tableHeaderView = tableViewHeadV;
}

#pragma mark 设置头像和navBar行为
- (void)setUpBehaviorAction {
    KZNavBarGradientBehavior *navBarBeHavior = [[KZNavBarGradientBehavior alloc] init];
    self.NavBarBehavior = navBarBeHavior;
    self.NavBarBehavior.owner = self;
    
    
    KZParallaxHeaderBehavior *headerBehavior = [[KZParallaxHeaderBehavior alloc] init];
    self.headerBehavior = headerBehavior;
    self.headerBehavior.owner = self;
    self.headerBehavior.backgroundView = self.backgroundImageView;
    self.headerBehavior.targetView = self.tableView.tableHeaderView;
    
    KZMutipleProxyBehavior *behavior = [[KZMutipleProxyBehavior alloc] init];
    self.behavior = behavior;
    NSMutableArray *array = [NSMutableArray array];
    [array addObject:self.headerBehavior];
    [array addObject:self];
    [array addObject:self.NavBarBehavior];
    self.behavior.delegateTargets = array;
    self.tableView.delegate = (id&lt;UITableViewDelegate&gt;)self.behavior;
    self.tableView.dataSource = (id&lt;UITableViewDataSource&gt;)self.behavior;
}

#pragma mark 导航栏底部黑色半透明渐变层
- (void)setNavigationBarBlackHud {
    
    CAGradientLayer *layer = [CAGradientLayer layer];
    layer.frame =  CGRectMake(0, 0, HLMScreenW*2, 64);
    layer.colors = @[(id)[[UIColor blackColor] colorWithAlphaComponent:0.6].CGColor, (id)[UIColor clearColor].CGColor];
    layer.startPoint = CGPointMake(0.5, 0.0);
    layer.endPoint = CGPointMake(0.5, 1.0);
    self.coverLayer = layer;
    self.coverLayer.opacity = 0;
    [self.backgroundImageView.layer insertSublayer:layer atIndex:0];
}


#pragma mark - UITableViewDelegate &amp; UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 20;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    WPSpecialTopicListContentCell *cell = [tableView dequeueReusableCellWithIdentifier:WPSpecialTopicListContentCellID forIndexPath:indexPath];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 236;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 0.01;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0.01;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
}

#pragma mark - scrollViewDelegate
static int _oldPosition;
- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
    
    //处理颜色变化
    CGFloat offsetY = scrollView.contentOffset.y;
    UIColor *tintColor = nil;
    UIColor *selectedTintColor = nil;
    if ( offsetY &gt; 0 ) {
        
        CGFloat alpha  = 1;
        
        CGFloat offset = HLMNavgationBackButtonMaxoffset / 2.0;
        
        if (offsetY &lt; offset) {
            alpha = 1 - offsetY / offset;
            tintColor = [UIColor colorWithWhite:1 alpha:alpha];
            selectedTintColor = [UIColor colorWithWhite:1 alpha:alpha];
            
        }else{
            
            alpha = offsetY / offset - 1;
            tintColor   = RGBA(102, 102, 102, alpha);
            selectedTintColor = RGBA(255, 115, 133, alpha);
        }
        
        
        self.normalTintColor = tintColor;
        self.selectedTintColor = selectedTintColor;
        self.navigationItem.leftBarButtonItem.tintColor = tintColor;
    }
    
    //处理底部条 向下滚动隐藏,向上滚动出现
    int newPosition = scrollView.contentOffset.y;
    //    NSLog(@"%f",scrollView.contentOffset.y);
    
    if (newPosition - _oldPosition &gt; 10) { //UP
        
        _oldPosition = newPosition;
        
        [UIView animateWithDuration:0.15 animations:^{
            self.footerBar.hlm_y = self.view.hlm_bottom;
            
        }];
        
    } else if (_oldPosition - newPosition &gt; 10) { //DOWN
        
        _oldPosition = newPosition;
        
        [UIView animateWithDuration:0.15 animations:^{
            
            self.footerBar.hlm_y = self.view.hlm_bottom - self.footerBar.hlm_height;
            
        }];
        
    }
    
    if (scrollView.contentOffset.y == 0) {
        [UIView animateWithDuration:0.15 animations:^{
            
            self.footerBar.hlm_y = self.view.hlm_bottom - self.footerBar.hlm_height;
            
        }];
    }
    //    NSLog(@"%lf",scrollView.contentOffset.y);
}


#pragma mark - Network Request
- (void)requestNewNotices {
    
    self.page = 1;
    
    HLMWeakSelf
    //    [CooperationKeeperServer listUnreadFriendsAndFamilyMessageByPage:self.page successBlock:^(NSArray&lt;FriendsAndFamilyMessage *&gt; *friednsAndFamilyMessageArray) {
    //
    //        if (friednsAndFamilyMessageArray.count) {
    //
    //            weakSelf.noticesArray = [NSMutableArray arrayWithArray:friednsAndFamilyMessageArray];
    //
    //            weakSelf.tableView.mj_footer.hidden = NO;
    //            [weakSelf.tableView.mj_header endRefreshing];
    //            [weakSelf.tableView reloadData];
    //
    //        } else {
    //
    //            [weakSelf.tableView.mj_header endRefreshing];
    //        }
    //
    //    } failureBlock:^(NSError *error) {
    //        [weakSelf.tableView.mj_header endRefreshing];
    //    }];
    
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.tableView.mj_header endRefreshing];
    });
    
}

- (void)requsetMoreNotices {
    
    self.page ++;
    
    HLMWeakSelf
    //    [CooperationKeeperServer listUnreadFriendsAndFamilyMessageByPage:self.page successBlock:^(NSArray&lt;FriendsAndFamilyMessage *&gt; *friednsAndFamilyMessageArray) {
    //
    //        if (friednsAndFamilyMessageArray.count) {
    //
    //            [weakSelf.noticesArray addObjectsFromArray:friednsAndFamilyMessageArray];
    //            [weakSelf.tableView reloadData];
    //            [weakSelf.tableView.mj_footer endRefreshing];
    //
    //        } else {
    //
    //            [weakSelf.tableView.mj_footer endRefreshingWithNoMoreData];
    //        }
    //
    //    } failureBlock:^(NSError *error) {
    //        [weakSelf.tableView.mj_footer endRefreshingWithNoMoreData];
    //    }];
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.tableView.mj_footer endRefreshingWithNoMoreData];
    });
    
}

#pragma mark - getter &amp; setter

- (UIView *)footerBar {
    
    if (!_footerBar) {
        HLMFooterMenuView *footerMenuView = [[HLMFooterMenuView alloc] initWithVCType:HLMFooterMenuViewVCType_MallService_MallWorks_Detail];
        [footerMenuView addFooterMenuTarget:self action:@selector(likeButtonClicked:) forControlEvents:HLMFooterMenuLikeClicked];
        [footerMenuView addFooterMenuTarget:self action:@selector(lookMerchantBtnClick:) forControlEvents:HLMFooterMenuMerchantClicked];
        [footerMenuView addFooterMenuTarget:self action:@selector(consultBtnClick:) forControlEvents:HLMFooterMenuImmediatelyFreeClicked];
        _footerBar = footerMenuView;
        
    }
    return _footerBar;
}

@end
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>EB839A37-617A-4738-A912-E4F85D15C14D</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>头部放大且渐变导航栏的TableViewController</string>
	<key>IDECodeSnippetTitle</key>
	<string>jaTableViewController_zoomOutHeader</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
