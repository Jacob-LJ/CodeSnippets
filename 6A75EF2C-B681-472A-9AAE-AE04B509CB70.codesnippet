<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>jaTableViewCtontroller_pullUp_PopMenu</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//
//  &lt;#DiscoverNoticeReceiveCommentController.m#&gt;
//  hunlimao
//
//  Created by Jacob on &lt;#2017/2/10#&gt;.
//  Copyright © &lt;#2017#&gt;年 taoximao. All rights reserved.
//

#import "DiscoverNoticeReceiveCommentController.h"
//view
#import "DiscoverNoticeLikePraiseCell.h"
#import "HLMPopMenuView.h"
//lib
#import &lt;SVProgressHUD.h&gt;
#import "MJRefresh.h"

@interface DiscoverNoticeReceiveCommentController ()&lt;UITableViewDelegate, UITableViewDataSource&gt;
@property (nonatomic, weak) UITableView *tableView;
@property (nonatomic, strong) NSMutableArray *noticesArray;
@property (nonatomic, assign) NSInteger page;
@property (nonatomic, weak) HLMPopMenuView *menuView;
@property (nonatomic,assign) BOOL flag;

@end

@implementation DiscoverNoticeReceiveCommentController

- (instancetype)init {
    if (self = [super init]) {
        self.hidesBottomBarWhenPushed = YES;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self setUpNav];
    [self setUpInit];
    [self setUpTableView];
    [self setUpPopMenu];
    
    [self.tableView.mj_header beginRefreshing];
}

- (void)setUpNav {
    self.navigationItem.title = @"收到的评论";
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"筛选" style:UIBarButtonItemStylePlain target:self action:@selector(filterTypleAction)];
}

- (void)setUpInit {
    self.view.backgroundColor = themeBackgroundColor;
}

- (void)setUpTableView {
    
    UITableView *tableView = [[UITableView alloc] initWithFrame:self.view.frame style:UITableViewStyleGrouped];
    [self.view addSubview:tableView];
    _tableView = tableView;
    tableView.backgroundColor = themeBackgroundColor;
    tableView.delegate = self;
    tableView.dataSource = self;
    tableView.separatorColor = RGBA(242, 242, 242, 1);
    
    tableView.mj_header = [HLMRefreshGifHeader headerWithRefreshingTarget:self refreshingAction:@selector(requestNewNotices)];
    tableView.mj_header.automaticallyChangeAlpha = YES;
    tableView.mj_footer = [HLMRefreshAutoFooter footerWithRefreshingTarget:self refreshingAction:@selector(requsetMoreNotices)];
    tableView.mj_footer.hidden = YES;
    
    [tableView registerNib:[UINib nibWithNibName:NSStringFromClass([DiscoverNoticeLikePraiseCell class]) bundle:nil] forCellReuseIdentifier:DiscoverNoticeLikePraiseCellID];
}

//设置弹出menu
- (void)setUpPopMenu {
    
    NSDictionary *dict1 = @{
                            @"imageName" : @"WeddingTask_collaborate",
                            @"itemName" : @"全部"
                            };
    NSDictionary *dict2 = @{
                            @"imageName" : @"WeddingTask_history",
                            @"itemName" : @"来自日记"
                            };
    NSDictionary *dict3 = @{
                            @"imageName" : @"WeddingTask_collaborate",
                            @"itemName" : @"来自文章"
                            };
    NSDictionary *dict4 = @{
                            @"imageName" : @"WeddingTask_history",
                            @"itemName" : @"来自话题"
                            };
    
    HLMWeakSelf;
    self.menuView = [HLMPopMenuView createMenuWithFrame:CGRectZero target:self.navigationController dataArray:@[dict1,dict2,dict3,dict4] hiddenSeparatorLine:YES   textColor:[UIColor whiteColor] itemsClickBlock:^(NSString *str, NSInteger tag) {
        
        if ([str isEqualToString:@"全部"]) {
            NSLog(@"全部");
        }
        
        if ([str isEqualToString:@"来自日记"]) {
            NSLog(@"来自日记");
        }
        
        if ([str isEqualToString:@"来自文章"]) {
            NSLog(@"来自文章");
        }
        
        if ([str isEqualToString:@"来自话题"]) {
            NSLog(@"来自话题");
        }
        
        [weakSelf.menuView hiddenMenu];
        weakSelf.flag = YES;
    } backViewTap:^{
        weakSelf.flag = YES;
    }];
    [self.menuView hiddenMenu];
    self.flag = YES;
    
    //    self.menuView.layer.shadowOpacity = 1;
    //    self.menuView.layer.shadowColor = RGBA(0, 0, 0, 0.4).CGColor;
    //    self.menuView.layer.shadowOpacity = 6;
    //    self.menuView.layer.shadowOffset = CGSizeMake(0, 2);
    
}

#pragma mark - private action
- (void)filterTypleAction {
    if (self.flag) {
        [self.menuView showMenuWithAnimation:self.flag];
        self.flag = NO;
    }else{
        [self.menuView showMenuWithAnimation:self.flag];
        self.flag = YES;
    }
}


#pragma mark - UITableViewDelegate &amp; UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return 50;//self.noticesArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    DiscoverNoticeLikePraiseCell *cell = [tableView dequeueReusableCellWithIdentifier:DiscoverNoticeLikePraiseCellID];
    //    cell.message = self.noticesArray[indexPath.row];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 72;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 0.01;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0.01;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
}

#pragma mark - Network Request
- (void)requestNewNotices {
    
    self.page = 1;
    
    HLMWeakSelf
    //    [CooperationKeeperServer listUnreadFriendsAndFamilyMessageByPage:self.page successBlock:^(NSArray&lt;FriendsAndFamilyMessage *&gt; *friednsAndFamilyMessageArray) {
    //
    //        if (friednsAndFamilyMessageArray.count) {
    //
    //            weakSelf.noticesArray = [NSMutableArray arrayWithArray:friednsAndFamilyMessageArray];
    //
    //            weakSelf.tableView.mj_footer.hidden = NO;
    //            [weakSelf.tableView.mj_header endRefreshing];
    //            [weakSelf.tableView reloadData];
    //
    //        } else {
    //
    //            [weakSelf.tableView.mj_header endRefreshing];
    //        }
    //
    //    } failureBlock:^(NSError *error) {
    //        [weakSelf.tableView.mj_header endRefreshing];
    //    }];
    
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.tableView.mj_header endRefreshing];
    });
    
}

- (void)requsetMoreNotices {
    
    self.page ++;
    
    HLMWeakSelf
    //    [CooperationKeeperServer listUnreadFriendsAndFamilyMessageByPage:self.page successBlock:^(NSArray&lt;FriendsAndFamilyMessage *&gt; *friednsAndFamilyMessageArray) {
    //
    //        if (friednsAndFamilyMessageArray.count) {
    //
    //            [weakSelf.noticesArray addObjectsFromArray:friednsAndFamilyMessageArray];
    //            [weakSelf.tableView reloadData];
    //            [weakSelf.tableView.mj_footer endRefreshing];
    //
    //        } else {
    //
    //            [weakSelf.tableView.mj_footer endRefreshingWithNoMoreData];
    //        }
    //
    //    } failureBlock:^(NSError *error) {
    //        [weakSelf.tableView.mj_footer endRefreshingWithNoMoreData];
    //    }];
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.tableView.mj_footer endRefreshingWithNoMoreData];
    });
    
}

#pragma getter &amp; setter

- (NSMutableArray *)noticesArray {
    if (!_noticesArray) {
        _noticesArray = [NSMutableArray array];
    }
    return _noticesArray;
}

@end</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>6A75EF2C-B681-472A-9AAE-AE04B509CB70</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>TableView控制器(上下拉,popMenu)</string>
	<key>IDECodeSnippetTitle</key>
	<string>jatableViewController_带上下拉和popMenu</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
