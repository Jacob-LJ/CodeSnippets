<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>jasegmentController</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>
#import "SegmentViewViewController.h"

//view
#import "LPSegmentedView.h"
//category
#import "UIView+Frame.h"


@interface SegmentViewViewController ()&lt;LPSegmentedViewDelegate, UIScrollViewDelegate&gt;

@property (nonatomic, weak) UIView *titleView;

@property (nonatomic, weak) UIView *itemSelectionView;
@property (nonatomic, weak) LPSegmentedView *segmentView;
@property (nonatomic, strong) NSArray *viewControllers;

@property (weak, nonatomic) UIScrollView *contentView;

@end

@implementation SegmentViewViewController

- (instancetype)init {
    if (self = [super init]) {
        self.hidesBottomBarWhenPushed = YES;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self setUpInit];
    [self setUpNav];
    [self setUpItemSelectionView];
    [self setUpContentView];
    
    [self segmentedView:self.segmentView didChangeIndex:0];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    self.contentView.contentSize = CGSizeMake(self.contentView.hlm_width * self.segmentView.items.count, 0);
}


- (void)setUpNav {
    
    UIView *titleView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, HLMScreenW - 100, 44)];
    
    UIScrollView *titleScrollView = [[UIScrollView alloc] initWithFrame:titleView.frame];
    titleScrollView.contentSize = CGSizeMake(titleScrollView.hlm_width, titleScrollView.hlm_height * 2);
    [titleView addSubview:titleScrollView];
    
    UILabel *titleLB = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, titleScrollView.hlm_width, 44)];
    titleLB.backgroundColor = [UIColor lightGrayColor];
    titleLB.autoresizingMask = UIViewAutoresizingFlexibleWidth;
    titleLB.textAlignment = NSTextAlignmentCenter;
    titleLB.text = @"婚纱摄影";
    titleLB.font = [UIFont systemFontOfSize:16];
    [titleScrollView addSubview:titleLB];
    
    UIView *itemSeletionView = [[UIView alloc] initWithFrame:CGRectMake(0, 44, titleScrollView.hlm_width, 44)];
    itemSeletionView.autoresizingMask = UIViewAutoresizingFlexibleWidth;
    itemSeletionView.backgroundColor = [UIColor redColor];
    [itemSeletionView addSubview:[UIButton buttonWithType:UIButtonTypeContactAdd]];
    [titleScrollView addSubview:itemSeletionView];
    
    self.navigationItem.titleView = titleView;
    self.titleView = titleView;
    
}

- (void)setUpInit {
    
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor = themeBackgroundColor;
    
    HLMBaseViewController *VC1 = [[HLMBaseViewController alloc] init];
    
    HLMBaseViewController *VC2 = [[HLMBaseViewController alloc] init];
    
    HLMBaseViewController *VC3 = [[HLMBaseViewController alloc] init];
    
    
    self.viewControllers = @[VC1, VC2, VC3];
    
    for (UIViewController *VC in self.viewControllers) {
        [self addChildViewController:VC];
    }
    
}

- (void)setUpItemSelectionView {
    
    UIView *itemSelectionView = [[UIView alloc] initWithFrame:CGRectMake(0, 64, HLMScreenW, 44)];
    [self.view addSubview:itemSelectionView];
    self.itemSelectionView = itemSelectionView;
    
    UIView *bottomLine = [[UIView alloc] initWithFrame:CGRectMake(0, 49, HLMScreenW, 1)];
    bottomLine.backgroundColor = RGBA(227, 227, 227, 1);
    [itemSelectionView addSubview:bottomLine];
    
    
    LPSegmentedView *segmentView = [[LPSegmentedView alloc] initWithFrame:CGRectMake(0, 0, HLMScreenW, 44)];
    segmentView.backgroundColor = [UIColor whiteColor];
    segmentView.segmentedDelegate = self;
    segmentView.items = @[@"所有任务", @"最近任务", @"星标任务"];
    segmentView.showIndicator = YES;
    segmentView.indicatorheight = 4;
    segmentView.indicatorBottomMargin = 4;
    segmentView.indicatorCornerRadius = 2;
    segmentView.indicatorColor = themeColor;
    segmentView.showSeparate = YES;
    segmentView.separatorInset = UIEdgeInsetsMake(15, 0, 15, 0);
    segmentView.separateColor = RGBA(227, 227, 227, 1);
    segmentView.averageButton = YES;
    segmentView.suitIndicatorWidth = YES;
    segmentView.suitExpandIndicatorWidth = YES;
    segmentView.expandWidth = -22.0;
    [itemSelectionView addSubview:segmentView];
    self.segmentView = segmentView;
    
}

- (void)setUpContentView {
    
    UIScrollView *contentView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, self.itemSelectionView.hlm_bottom, HLMScreenW, HLMScreenH - self.itemSelectionView.hlm_bottom)];
    self.contentView = contentView;
    [self.view addSubview:contentView];
    contentView.scrollEnabled = NO;
    contentView.pagingEnabled = YES;
    contentView.showsVerticalScrollIndicator = NO;
    contentView.showsHorizontalScrollIndicator = NO;
    contentView.delegate = self;
    contentView.backgroundColor = themeBackgroundColor;
    
}

#pragma mark - LPSegmentedViewDelegate

- (void)segmentedView:(LPSegmentedView *)segmentedView didChangeIndex:(NSInteger)index {
    
    [self.contentView setContentOffset:CGPointMake(index * self.contentView.hlm_width, 0) animated:YES];
    
    if (!self.childViewControllers.count) return;
    
    UIViewController *VC = self.viewControllers[index];
    if (VC.isViewLoaded) {
        [VC viewWillAppear:YES];
        return;
    }
    
    [self.contentView addSubview:VC.view];
    VC.view.frame = CGRectMake(index * self.contentView.hlm_width, 0, self.contentView.hlm_width, self.contentView.hlm_height);
    VC.view.backgroundColor = [UIColor colorWithRed:arc4random() % 256 / 256.0 green:arc4random() % 256 / 256.0 blue:arc4random() % 256 / 256.0 alpha:1];
}

#pragma mark - UIScrollViewDelegate

- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView {
    
    NSInteger index = scrollView.contentOffset.x / scrollView.hlm_width;
    self.segmentView.selectedIndex = index;
}

@end
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>53EA166A-894A-4205-9939-F9397A511E04</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>ja设置导航栏下segment的Controller</string>
	<key>IDECodeSnippetTitle</key>
	<string>jasegmentController_设置segmentController</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
