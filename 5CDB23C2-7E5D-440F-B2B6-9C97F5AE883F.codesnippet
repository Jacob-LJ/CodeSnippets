<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>jaCollectionView_ targetContentOffset_SpecialHorizontalScroll</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#import "WIPreviewThemeController.h"
//view
#import "WPSelectionDetailMainCCell.h"

static const CGFloat kMinimumInteritemSpacing = 25;

@interface WIPreviewThemeController ()&lt;UICollectionViewDelegate, UICollectionViewDataSource&gt;

@property (nonatomic, weak) UICollectionView *collectionView;
@property (nonatomic, weak) UICollectionViewFlowLayout *flowLayout;

@property (nonatomic, strong) NSMutableArray *dataSource;
@property (nonatomic, assign) CGFloat itemW;

@end

@implementation WIPreviewThemeController

- (instancetype)init {
    if (self = [super init]) {
        self.hidesBottomBarWhenPushed = YES;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self prepareData];
    [self setUpInit];
    [self setUpCollectionView];
}

- (void)prepareData {
    self.dataSource = [NSMutableArray array];
    for (NSInteger i =0; i&lt;5; i++) {
        [self.dataSource addObject:[NSString stringWithFormat:@"%ld%@",(long)i,[self shuffledAlphabet]]];
    }
}

- (void)setUpInit {
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor = RGBA(242, 242, 242, 1);
}

- (void)setUpCollectionView {
    
    CGFloat leftMargin = HLMScreenW * (53.0/375.0);
    CGFloat itemW = HLMScreenW - leftMargin * 2;
    CGFloat itemH = itemW * 424.0/265.0;
    self.itemW = itemW;
    
    UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc] init];
    flowLayout.itemSize = CGSizeMake(itemW, itemH);
    flowLayout.minimumInteritemSpacing = 0;
    flowLayout.minimumLineSpacing = kMinimumInteritemSpacing;
    flowLayout.scrollDirection = UICollectionViewScrollDirectionHorizontal;
    flowLayout.sectionInset = UIEdgeInsetsMake(0, leftMargin, 0, leftMargin);
    
    
    CGFloat topMargin = HLMScreenH * (125.0/667.0);
    UICollectionView *collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, topMargin, HLMScreenW, itemH) collectionViewLayout:flowLayout];
    collectionView.delegate = self;
    collectionView.dataSource = self;
    collectionView.pagingEnabled = NO;
    collectionView.backgroundColor = RGBA(242, 242, 242, 1);
    collectionView.showsHorizontalScrollIndicator = NO;
    
    [collectionView registerNib:[UINib nibWithNibName:NSStringFromClass([WPSelectionDetailMainCCell class]) bundle:nil] forCellWithReuseIdentifier:WPSelectionDetailMainCCellID];
    
    [self.view addSubview:collectionView];
    self.collectionView = collectionView;
    self.flowLayout = flowLayout;
}


#pragma mark - UICollectionViewDelegate, UICollectionViewDataSource
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return self.dataSource.count;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    WPSelectionDetailMainCCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:WPSelectionDetailMainCCellID forIndexPath:indexPath];
    cell.contentView.backgroundColor = [UIColor colorWithRed:arc4random() % 256 / 256.0 green:arc4random() % 256 / 256.0 blue:arc4random() % 256 / 256.0 alpha:1];
    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    NSLog(@"点击-- %@",indexPath);
}

- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset {
    
    CGFloat pageWidth = self.itemW + kMinimumInteritemSpacing; // width + space
    CGFloat customSpace = 0; // 自定义每一页多滚动的距离
    
    CGFloat currentOffset = scrollView.contentOffset.x;
    CGFloat targetOffset = targetContentOffset-&gt;x;
    CGFloat newTargetOffset = 0;
    
    BOOL isGoBack = NO; //是否向前
    
    if (targetOffset &gt; currentOffset) { //向后
        isGoBack = NO;
        
    } else if (targetOffset &lt; currentOffset) { //向前
        isGoBack = YES;
        
    } else if (targetOffset == currentOffset) { //没有惯性
        
        //判断手指落点来偏移
        NSInteger index = 0;
        CGFloat visibleOffset = currentOffset;
        
        while (1) {
            if (visibleOffset &gt; pageWidth) {
                visibleOffset -= pageWidth;
                index ++;
            } else {
                break;
            }
        }
        
        visibleOffset = currentOffset - index * pageWidth;
        
        if (visibleOffset &gt;= pageWidth * 0.5) {
            isGoBack = NO;
        } else {
            isGoBack = YES;
        }
    }
    
    newTargetOffset = isGoBack ? floorf(currentOffset / pageWidth) * pageWidth :  ceilf(currentOffset / pageWidth) * pageWidth;
    
    
    // 自定义每一页多滚动的距离
    NSInteger index = newTargetOffset / self.itemW;
    
    if (index == 0) {
        customSpace = 0;
    } else if (index == self.dataSource.count - 1) {
        customSpace = -20;
    } else {
        customSpace = 10;
    }
    
    newTargetOffset += customSpace;
    // --------------------
    
    if (newTargetOffset &lt; 0)
        newTargetOffset = 0;
    else if (newTargetOffset &gt; scrollView.contentSize.width)
        newTargetOffset = scrollView.contentSize.width;
    
    targetContentOffset-&gt;x = currentOffset;
    [scrollView setContentOffset:CGPointMake(newTargetOffset, 0) animated:YES];
    
}

#pragma mark - test
//产生3个随机字母
- (NSString *)shuffledAlphabet {
    
    NSMutableArray * shuffledAlphabet = [NSMutableArray arrayWithArray:@[@"A",@"B",@"C",@"D",@"E",@"F",@"G",@"H",@"I",@"J",@"K",@"L",@"M",@"N",@"O",@"P",@"Q",@"R",@"S",@"T",@"U",@"V",@"W",@"X",@"Y",@"Z"]];
    
    NSString *strTest = [[NSString alloc]init];
    for (int i=0; i&lt;3; i++) {
        int x = arc4random() % 25;
        strTest = [NSString stringWithFormat:@"%@%@",strTest,shuffledAlphabet[x]];
    }
    return strTest;
}


@end</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>5CDB23C2-7E5D-440F-B2B6-9C97F5AE883F</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>collectionView水平指定分镜滚动</string>
	<key>IDECodeSnippetTitle</key>
	<string>jaCollectionView_ targetContentOffset_SpecialHorizontalScroll</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
